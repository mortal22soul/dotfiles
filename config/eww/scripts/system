#!/bin/bash

## Files and Data
PREV_TOTAL=0
PREV_IDLE=0
cpuFile="/tmp/.cpu_usage"

pkgCount() {
  dpkg -l | wc -l
}

pkgUpdates() {
  updates=$(xbps-install -S -un | cut -d' ' -f2 | sort | uniq -c | xargs)

  if [ -z "$updates" ]; then
    echo "Fully Updated"
  else
    echo " $updates""s"
  fi
}

battery() {
  cat /sys/class/power_supply/BAT1/capacity
}

cpu() {
	if [[ -f "${cpuFile}" ]]; then
		fileCont=$(cat "${cpuFile}")
		PREV_TOTAL=$(echo "${fileCont}" | head -n 1)
		PREV_IDLE=$(echo "${fileCont}" | tail -n 1)
	fi

	CPU=(`cat /proc/stat | grep '^cpu '`) # Get the total CPU statistics.
	unset CPU[0]                          # Discard the "cpu" prefix.
	IDLE=${CPU[4]}                        # Get the idle CPU time.

	# Calculate the total CPU time.
	TOTAL=0

	for VALUE in "${CPU[@]:0:4}"; do
		let "TOTAL=$TOTAL+$VALUE"
	done

	if [[ "${PREV_TOTAL}" != "" ]] && [[ "${PREV_IDLE}" != "" ]]; then
		# Calculate the CPU usage since we last checked.
		let "DIFF_IDLE=$IDLE-$PREV_IDLE"
		let "DIFF_TOTAL=$TOTAL-$PREV_TOTAL"
		let "DIFF_USAGE=(1000*($DIFF_TOTAL-$DIFF_IDLE)/$DIFF_TOTAL+5)/10"
		echo "${DIFF_USAGE}"
	else
		echo "?"
	fi

	# Remember the total and idle CPU times for the next check.
	echo "${TOTAL}" > "${cpuFile}"
	echo "${IDLE}" >> "${cpuFile}"
}

disk() {
  df -hl | awk '/^\/dev\/sd[ab]/ { sum+=$5 } END { print sum }'
}

ram() {
  printf "%.0f\n" $(free -m | grep Mem | awk '{print ($3/$2)*100}')
}

backlight() {
  echo $(($(brightnessctl get)*10))
}

wifi() {
  case "$(cat /sys/class/net/wl*/operstate 2>/dev/null)" in
  up) printf " " ;;
  down) printf "睊" ;;
  esac
}

"$@"